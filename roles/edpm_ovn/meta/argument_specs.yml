---
argument_specs:
  # ./roles/edpm_ovn/tasks/main.yml entry point
  main:
    short_description: The main entry point for the edpm_ovn role.
    options:
      edpm_ovn_images_download_delay:
        type: int
        default: 5
        description: The seconds between retries for failed download tasks
      edpm_ovn_images_download_retries:
        type: int
        default: 5
        description: The number of retries for failed download tasks
      edpm_enable_chassis_gw:
        default: false
        description: ''
        type: bool
      edpm_enable_hw_offload:
        default: false
        description: ''
        type: bool
      edpm_enable_internal_tls:
        default: false
        description: ''
        type: bool
      edpm_ovn_bridge:
        default: br-int
        description: ''
        type: str
      edpm_ovn_bridge_mappings:
        default:
          - datacentre:br-ex
        description: ''
        type: list
      edpm_ovn_chassis_mac_first_octets:
        default:
          - 0e
          - 1e
          - 2e
          - 3e
        description: ''
        type: list
      edpm_ovn_chassis_mac_mapping_prefixes:
        default: '{%- set mac_prefixes = {} -%} {%- set seen_prefixes = [] -%} {%- set seen_bridges
          = [] -%} {%- for bridge_mapping in edpm_ovn_bridge_mappings -%} {%- for n in range(0,255)
          if bridge_mapping not in seen_bridges -%} {%- set _seed = (bridge_mapping + n|string)
          -%} {%- set prefix = edpm_ovn_chassis_mac_first_octets | random + '':'' + ''%02x''
          % 255 | random(seed=_seed) -%} {%- if not prefix in seen_prefixes -%} {%- set
          seen_prefixes = seen_prefixes.append(prefix) -%} {%- set seen_bridges = seen_bridges.append(bridge_mapping)
          -%} {%- set mac_prefixes = mac_prefixes.update({(bridge_mapping | split('':'')
          | first): prefix}) -%} {%- endif -%} {%- endfor -%} {%- endfor -%} {{ mac_prefixes
          }}'
        description: >
          Automatically generate the first two octets for the MAC address pefixes.
          Pick random from first octets and then a nested iteration over a range
          of seeds. The inner loop breaks as soon as the bridge_mapping is in seen_bridges.
        type: str
      edpm_ovn_chassis_mac_mapping_seed:
        default: '{{ ansible_machine_id }}'
        description: ''
        type: str
      edpm_ovn_controller_agent_image:
        default: quay.io/podified-antelope-centos9/openstack-ovn-controller:current-podified
        description: URL of the controller agent image.
        type: str
      edpm_ovn_controller_common_volumes:
        default:
          - /lib/modules:/lib/modules:ro
          - /run:/run
          - /var/lib/openvswitch/ovn:/run/ovn:shared,z
          - /var/log/containers/openvswitch:/var/log/openvswitch:z
          - /var/log/containers/openvswitch:/var/log/ovn:z
          - /var/lib/kolla/config_files/ovn_controller.json:/var/lib/kolla/config_files/config.json:ro
        description: List of volumes in a mount point form.
        type: list
      edpm_ovn_controller_tls_volumes:
        default:
          - /etc/pki/tls/certs/:/etc/pki/tls/certs/
          - /etc/pki/tls/private/:/etc/pki/tls/private/
        description: List of TLS volumes in a mount point form.
        type: list
      edpm_ovn_dbs:
        default: []
        description: ''
        type: list
      edpm_ovn_encap_ip:
        default: '{{ tenant_ip }}'
        description: ''
        type: str
      edpm_ovn_encap_type:
        default: geneve
        description: ''
        type: str
      edpm_ovn_multi_rhel:
        default: false
        description: ''
        type: bool
      edpm_ovn_of_probe_interval:
        default: 60
        description: ''
        type: int
      edpm_ovn_ofctrl_wait_before_clear:
        default: 8000
        description: ''
        type: int
      edpm_ovn_ovs_external_ids:
        default:
          hostname: '{{ ansible_nodename }}'
          ovn-bridge: '{{ edpm_ovn_bridge }}'
          ovn-bridge-mappings: '{{ edpm_ovn_bridge_mappings | join('','') }}'
          ovn-chassis-mac-mappings: '{%- set chassis_mac_mappings = [] -%} {%- for physnet,
            mac_prefix in edpm_ovn_chassis_mac_mapping_prefixes.items() -%} {{ chassis_mac_mappings.append([physnet,
            mac_prefix | community.general.random_mac(seed=edpm_ovn_chassis_mac_mapping_seed)]
            | join('':'')) }} {%- endfor -%} {{ chassis_mac_mappings | join('','') }}'
          ovn-encap-ip: '{{ edpm_ovn_encap_ip }}'
          ovn-encap-type: '{{ edpm_ovn_encap_type }}'
          ovn-match-northd-version: true
          ovn-monitor-all: true
          ovn-ofctrl-wait-before-clear: '{{ edpm_ovn_ofctrl_wait_before_clear }}'
          ovn-openflow-probe-interval: '{{ edpm_ovn_of_probe_interval }}'
          ovn-remote: '{% set db_addresses = [] %}{% for host in edpm_ovn_dbs %}{{ db_addresses.append([edpm_ovn_protocol,
            host, edpm_ovn_sb_server_port] | join('':'')) }}{% endfor %}{{ db_addresses
            | join('','') }}'
          ovn-remote-probe-interval: '{{ edpm_ovn_remote_probe_interval }}'
          rundir: /var/run/openvswitch
        description: Sets external_id data from provided variables using Jinja templating
        type: dict
      edpm_ovn_ovs_other_config:
        default:
          vlan-limit: 0
        description: Openvswitch other_config
        type: dict
      edpm_ovn_protocol:
        default: '{% if edpm_enable_internal_tls | bool %}ssl{% else %}tcp{% endif %}'
        description: ''
        type: str
      edpm_ovn_remote_probe_interval:
        default: 60000
        description: ''
        type: int
      edpm_ovn_sb_server_port:
        default: 6642
        description: ''
        type: int
